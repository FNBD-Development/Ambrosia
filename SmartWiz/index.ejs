<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../templates/header.ejs') %>
</head>

<body class="dark:bg-zinc-900">
  <nav class="p-2 flex justify-between items-center bg-gray-200 dark:bg-zinc-800 dark:text-white">
    <h1 class="font-Montserrat text-2xl dark:text-white">
      Ambrosia
    </h1>
    <a class="hs-dark-mode-active:hidden block hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500"
      href="#!" data-hs-theme-click-value="dark">
      <svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
        viewBox="0 0 16 16">
        <path
          d="M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278zM4.858 1.311A7.269 7.269 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.316 7.316 0 0 0 5.205-2.162c-.337.042-.68.063-1.029.063-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286z" />
      </svg>
    </a>
    <a class="hs-dark-mode-active:block hidden hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500"
      href="#!" data-hs-theme-click-value="light">
      <svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
        viewBox="0 0 16 16">
        <path
          d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z" />
      </svg>
    </a>
  </nav>
  <div class="flex justify-center pt-5">
    <div class="bg-gray-200/75 dark:bg-zinc-800  shadow-md p-4 rounded-md">
      <h1 class="text-2xl dark:text-white font-Montserrat mb-3">Setup!</h1>
      <div class="gap-x-2">
        <label for="input-label" class="block text-sm font-medium mb-1 dark:text-white">Admin Username</label>
        <input type="email" id="adminname"
          class="py-3 px-4 mb-2 block w-full bg-gray-200/80  rounded-md text-sm  dark:bg-zinc-700/25  dark:text-white"
          placeholder="Peter Griffan">
        <label for="input-label" class="block text-sm font-medium mb-1 dark:text-white">Admin Password</label>
        <input type="password" id="adminpass"
          class="py-3 px-4 block w-full bg-gray-200/80 border-gray-200/50 rounded-md text-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-zinc-700/25   dark:text-white"
          placeholder="FNBD">
        <div class="flex justify-between items-center gap-x-5">
          <h1 class="text-xl dark:text-white font-Montserrat mb-3 mt-3">Have a license?</h1>
          <a class="text-blue-500 hover:text-blue-600 dark:text-blue-400 dark:hover:text-blue-500"
            href="https://ambrosia.fnbd-team.eu.org/license">Get a license</a>
        </div>
        <input type="password" id="license"
          class="py-3 px-4 block w-full bg-gray-200/80 border-gray-200/50 rounded-md text-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-zinc-700/25  dark:border-gray-700 dark:text-white"
          placeholder="A License">
      </div>
      <button type="button" onclick="sendreq()"
        class="py-2 px-3 inline-flex justify-center items-center gap-2 rounded-md mt-2 bg-purple-300 border border-transparent font-semibold dark:text-white  hover:bg-purple-400 focus:outline-none focus:ring-2 ring-offset-white focus:ring-purple-500 focus:ring-offset-2 transition-all text-sm dark:focus:ring-offset-gray-800">
        Install!
      </button>
    </div>
  </div>
</body>
<script>
  const HSThemeAppearance = {
    init() {
      const defaultTheme = 'default'
      let theme = localStorage.getItem('hs_theme') || defaultTheme

      if (document.querySelector('html').classList.contains('dark')) return
      this.setAppearance(theme)
    },
    _resetStylesOnLoad() {
      const $resetStyles = document.createElement('style')
      $resetStyles.innerText = `*{transition: unset !important;}`
      $resetStyles.setAttribute('data-hs-appearance-onload-styles', '')
      document.head.appendChild($resetStyles)
      return $resetStyles
    },
    setAppearance(theme, saveInStore = true, dispatchEvent = true) {
      const $resetStylesEl = this._resetStylesOnLoad()

      if (saveInStore) {
        localStorage.setItem('hs_theme', theme)
      }

      if (theme === 'auto') {
        theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'
      }

      document.querySelector('html').classList.remove('dark')
      document.querySelector('html').classList.remove('default')
      document.querySelector('html').classList.remove('auto')

      document.querySelector('html').classList.add(this.getOriginalAppearance())

      setTimeout(() => {
        $resetStylesEl.remove()
      })

      if (dispatchEvent) {
        window.dispatchEvent(new CustomEvent('on-hs-appearance-change', { detail: theme }))
      }
    },
    getAppearance() {
      let theme = this.getOriginalAppearance()
      if (theme === 'auto') {
        theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'
      }
      return theme
    },
    getOriginalAppearance() {
      const defaultTheme = 'default'
      return localStorage.getItem('hs_theme') || defaultTheme
    }
  }
  HSThemeAppearance.init()

  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
    if (HSThemeAppearance.getOriginalAppearance() === 'auto') {
      HSThemeAppearance.setAppearance('auto', false)
    }
  })

  window.addEventListener('load', () => {
    const $clickableThemes = document.querySelectorAll('[data-hs-theme-click-value]')
    const $switchableThemes = document.querySelectorAll('[data-hs-theme-switch]')

    $clickableThemes.forEach($item => {
      $item.addEventListener('click', () => HSThemeAppearance.setAppearance($item.getAttribute('data-hs-theme-click-value'), true, $item))
    })

    $switchableThemes.forEach($item => {
      $item.addEventListener('change', (e) => {
        HSThemeAppearance.setAppearance(e.target.checked ? 'dark' : 'default')
      })

      $item.checked = HSThemeAppearance.getAppearance() === 'dark'
    })

    window.addEventListener('on-hs-appearance-change', e => {
      $switchableThemes.forEach($item => {
        $item.checked = e.detail === 'dark'
      })
    })
  })

  const Toast = Swal.mixin({
    toast: true,
    position: 'bottom-right',
    customClass: {
      popup: 'colored-toast'
    },
    showConfirmButton: false,
    timer: 1500,
    timerProgressBar: true
  })

  function sendreq() {
    const adminName = document.getElementById('adminname')
    const adminPass = document.getElementById('adminpass');
    const license = document.getElementById('license');
    if (!adminName.value) {
      document.getElementById('adminname').classList.add('border-red-500', 'focus:border-red-500', 'focus:ring-red-500', 'border');
      Toast.fire({
      icon: 'error',
      title: 'error',
      discription: 'Sent request to API!'
    })
    }
    if (adminName.value) {
      document.getElementById('adminname').classList.remove('border-red-500', 'focus:border-red-500', 'focus:ring-red-500', 'border');
    }

    if (!adminPass.value) {
      document.getElementById('adminpass').classList.add('border-red-500', 'focus:border-red-500', 'focus:ring-red-500', 'border');
      Toast.fire({
      icon: 'error',
      title: 'error',
      discription: 'Sent request to API!'
    })
    }
    if (adminPass.value) {
      document.getElementById('adminpass').classList.remove('border-red-500', 'focus:border-red-500', 'focus:ring-red-500', 'border');
    }

    if (adminPass.value && adminName.value) {
      axios.post('/smartwiz/setup')
    }
  }


</script>

</html>